generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Feature {
  None
  Popular
  New
}

enum BeverageBase {
  Drip
  Espresso
  Milk
}

enum BeverageHotCold {
  Hot
  Cold
}

model Beverage {
  id          Int                 @id @default(autoincrement())
  name        String              @unique @db.VarChar(255)
  image       String              @db.VarChar(400)
  description String              @db.VarChar(255)
  base        BeverageBase
  feature     Feature
  variations  BeverageVariation[]
}

model BeverageVariation {
  id          Int              @id @default(autoincrement())
  beverage    Beverage         @relation(fields: [beverage_id], references: [id])
  beverage_id Int
  price       Int
  serving     String           @db.VarChar(255)
  concentrate Boolean
  hot_cold    BeverageHotCold?
  available   Boolean          @default(true)
}

enum FoodCategory {
  Pastry
  Cake
  Pasta
  Snacks
}

model Food {
  id          Int             @id @default(autoincrement())
  name        String          @unique @db.VarChar(255)
  image       String          @db.VarChar(400)
  description String          @db.VarChar(255)
  category    FoodCategory
  feature     Feature
  variations  FoodVariation[]
}

model FoodVariation {
  id        Int     @id @default(autoincrement())
  food      Food    @relation(fields: [food_id], references: [id])
  food_id   Int
  price     Int
  serving   String  @db.VarChar(255)
  available Boolean @default(true)
}

model Customer {
  id       Int     @id @default(autoincrement())
  email    String  @unique
  points   Int     @default(0) // loyalty points .2
  password String
  name     String
  Order    Order[]
}

enum OrderStatus {
  Incoming
  Processing
  Complete
  Received
  Cancelled
}

enum OrderType {
  DineIn
  PickUpNow
  PickUpLater
  ParkNGo
}

model Order {
  id          String      @id @default(uuid())
  created_at  DateTime    @default(now())
  received_at DateTime?
  customer    Customer?   @relation(fields: [customer_id], references: [id])
  customer_id Int?
  status      OrderStatus
  order_type  OrderType
  mop         String
  items       Json
  total_price Int
  total_num   Int
}

enum StaffRole {
  Admin
  Employee
  Dev
}

model Staff {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String
  name     String
  role     StaffRole
}

model MOP {
  id        Int     @id @default(autoincrement())
  acct_name String
  bank_name String  @unique
  available Boolean @default(true)
  qr_code   String  @db.VarChar(400)
}